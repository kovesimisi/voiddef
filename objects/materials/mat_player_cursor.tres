[gd_resource type="ShaderMaterial" load_steps=9 format=2]

[sub_resource type="VisualShaderNodeInput" id=4]
input_name = "alpha"

[sub_resource type="VisualShaderNodeColorUniform" id=8]
uniform_name = "albedo_color"

[sub_resource type="VisualShaderNodeInput" id=5]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorDecompose" id=6]

[sub_resource type="VisualShaderNodeScalarFunc" id=7]
function = 31

[sub_resource type="VisualShaderNodeScalarOp" id=9]
default_input_values = [ 0, 0.0, 1, 0.5 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarClamp" id=10]

[sub_resource type="VisualShader" id=2]
code = "shader_type spatial;
render_mode cull_disabled, specular_disabled, unshaded, world_vertex_coords;

uniform vec4 albedo_color : hint_color;



void vertex() {
// Input:2
	vec3 n_out2p0 = VERTEX;

// VectorDecompose:3
	float n_out3p0 = n_out2p0.x;
	float n_out3p1 = n_out2p0.y;
	float n_out3p2 = n_out2p0.z;

// ScalarOp:5
	float n_in5p1 = 0.50000;
	float n_out5p0 = n_out3p1 * n_in5p1;

// ScalarClamp:6
	float n_in6p1 = 0.00000;
	float n_in6p2 = 1.00000;
	float n_out6p0 = clamp(n_out5p0, n_in6p1, n_in6p2);

// ScalarFunc:4
	float n_out4p0 = 1.0 - n_out6p0;

// Output:0
	COLOR.a = n_out4p0;

}

void fragment() {
// ColorUniform:3
	vec3 n_out3p0 = albedo_color.rgb;
	float n_out3p1 = albedo_color.a;

// Input:2
	float n_out2p0 = COLOR.a;

// Output:0
	ALBEDO = n_out3p0;
	ALPHA = n_out2p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -688, 39 )
modes/cull = 2
modes/specular = 4
flags/unshaded = true
flags/world_vertex_coords = true
nodes/vertex/0/position = Vector2( 660, 200 )
nodes/vertex/2/node = SubResource( 5 )
nodes/vertex/2/position = Vector2( -420, 320 )
nodes/vertex/3/node = SubResource( 6 )
nodes/vertex/3/position = Vector2( -220, 280 )
nodes/vertex/4/node = SubResource( 7 )
nodes/vertex/4/position = Vector2( 400, 280 )
nodes/vertex/5/node = SubResource( 9 )
nodes/vertex/5/position = Vector2( 20, 260 )
nodes/vertex/6/node = SubResource( 10 )
nodes/vertex/6/position = Vector2( 200, 260 )
nodes/vertex/connections = PoolIntArray( 2, 0, 3, 0, 4, 0, 0, 7, 3, 1, 5, 0, 5, 0, 6, 0, 6, 0, 4, 0 )
nodes/fragment/2/node = SubResource( 4 )
nodes/fragment/2/position = Vector2( -280, 260 )
nodes/fragment/3/node = SubResource( 8 )
nodes/fragment/3/position = Vector2( -260, 120 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 1, 3, 0, 0, 0 )

[resource]
resource_local_to_scene = true
shader = SubResource( 2 )
shader_param/albedo_color = Color( 1, 1, 1, 1 )
